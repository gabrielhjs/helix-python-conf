name: CI
on: [push]
jobs:
  ci:
    name: CI
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest]
        python-version: [3.11]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Poetry
        run: pipx install poetry
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          cache: poetry
          python-version: ${{ matrix.python-version }}
      - name: Setup local environment
        run: |
          poetry check --no-interaction
          poetry config virtualenvs.in-project true
          poetry config virtualenvs.create true --local
      - id: cache-dependencies
        name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/.venv
          key: ${{ matrix.os }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ${{ matrix.os }}-
      - name: Install dependencies
        if: steps.cache-dependencies.cache-hit != 'true'
        run: |
          poetry install --no-interaction
      - run: echo "$(poetry env info --path)/bin" >> $GITHUB_PATH
      - name: Pre Commit check
        run: |
          poetry run pre-commit run --all-files
      - uses: jakebailey/pyright-action@v2
        name: Pyright check
        with:
          project: pyproject.toml
          venv-path: ${{ github.workspace }}/.venv
      - name: Run tests
        run: |
          poetry run pytest -v
